<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * OrdenProduccionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrdenProduccionRepository extends EntityRepository
{
	//Obtiene numero maximo para consecutivo orden_produccion
    public function findConsecutivo($anio)
    {
        $em = $this->getEntityManager();
        $dql = 'SELECT COUNT(p.id) + 1 AS maximo
            FROM AppBundle:OrdenProduccion p
            WHERE YEAR(p.createdAt) = :anio';
        $consulta = $em->createQuery($dql);
        $consulta->setParameter('anio', $anio);
        return $consulta->getOneOrNullResult();
    }

    //Obtiene numero maximo para consecutivo orden_produccion
    public function findOrdenProduccionTipo($idUsuario, $tipo)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT op
            FROM AppBundle:OrdenProduccion op
            JOIN op.pedido p
            WHERE p.usuario = :idUsuario
            AND op.estado = :tipo";
        $consulta = $em->createQuery($dql);
        $consulta->setParameter('idUsuario', $idUsuario);
        $consulta->setParameter('tipo', $tipo);
        return $consulta->getResult();
    }

    //Obtiene numero maximo para consecutivo orden_produccion
    public function getOrdenProduccionTipo($tipo)
    {
        $repository = $this->getEntityManager('AppBundle:OrdenProduccion');

        $query = $this->createQueryBuilder('op')
        ->leftJoin('op.pedido', 'p')
        ->where('op.estado = :tipo')
        ->setParameter('tipo', $tipo)
        ->orderBy('op.prioridad', 'DESC')
        ->getQuery();

        return $query->getResult();
    }



    //------------------------------------
    public function getOrdenesProduccionTerminadas()
    {        
        $em = $this->getEntityManager();
        $dql = "SELECT op
            FROM AppBundle:OrdenProduccion op
            WHERE op.estado = :estado";

        $consulta = $em->createQuery($dql);
        $consulta->setParameter('estado', 'Terminada');
        return $consulta->getResult();        
    }

    //
    public function getOrdenProduccionDetalleTipoResponsable($tipo,$idUsuario = null)
    {
        if ($idUsuario == null) {
            $query = $this->createQueryBuilder('op')
            ->join('op.pedido', 'p')
            ->where('op.estado = :tipo')
            ->setParameter('tipo', $tipo)
            ->orderBy('op.prioridad', 'DESC')
            ->getQuery(); 
        }else{
            $query = $this->createQueryBuilder('opd')
            ->join('opd.ordenProduccion', 'op')
            ->join('op.pedido', 'p')
            ->where('opd.ordenProduccionEstado = :tipo AND opd.responsable = :idUsuario')
            ->setParameter('idUsuario', $idUsuario)
            ->setParameter('tipo', $tipo)
            ->orderBy('op.prioridad', 'DESC')
            ->getQuery();
        }

        return $query->getResult();
    }


    //
    public function getOrdenProduccionDetalleTipoUsuario($tipo,$idUsuario = null)
    {
        if ($idUsuario == null) {
            $query = $this->createQueryBuilder('opd')
            ->join('opd.ordenProduccion', 'op')
            ->join('op.pedido', 'p')
            ->where('opd.ordenProduccionEstado = :tipo')
            ->setParameter('tipo', $tipo)
            ->orderBy('op.prioridad', 'DESC')
            ->getQuery(); 
        }else{
            $query = $this->createQueryBuilder('opd')
            ->join('opd.ordenProduccion', 'op')
            ->join('op.pedido', 'p')
            ->where('opd.ordenProduccionEstado = :tipo AND p.usuario = :idUsuario')
            ->setParameter('idUsuario', $idUsuario)
            ->setParameter('tipo', $tipo)
            ->orderBy('op.prioridad', 'DESC')
            ->getQuery();
        }

        return $query->getResult();
    }
}
